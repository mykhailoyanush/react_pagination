{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onChangePage","useState","items","setItems","count","Math","ceil","useEffect","current","i","toString","className","type","onClick","disabled","map","item","classnames","active","random","App","setTotal","setPerPage","setPage","htmlFor","id","value","min","onChange","event","target","max","newPage","ReactDOM","render","document","getElementById"],"mappings":"8OAaaA,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,KACAC,EACI,EADJA,aAEA,EAA0BC,mBAAmB,CAAC,MAA9C,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAQC,KAAKC,KAAKT,EAAQC,GAyBhC,OAvBAS,qBAAU,WACRJ,EAAS,CAAC,MAELJ,EAAO,EAAK,GACfI,GAAS,SAACK,GAAD,4BAA2BA,GAA3B,CAAoC,WAI/C,IARc,eAQLC,GACHA,GAAMV,EAAO,GAAMU,GAAMV,EAAO,GAClCI,GAAS,SAACK,GAAD,4BAA2BA,GAA3B,CAAoCC,EAAEC,iBAF1CD,EAAI,EAAGA,GAAKL,EAAOK,IAAM,EAAzBA,GAMJV,EAAO,EAAKK,GACfD,GAAS,SAACK,GAAD,4BAA2BA,GAA3B,CAAoC,WAG3CJ,EAASL,EAAO,GAClBI,GAAS,SAACK,GAAD,4BAA2BA,GAA3B,CAAoCJ,EAAMM,kBAEpD,CAACb,EAAOC,EAASC,IAGlB,qBAAIY,UAAU,aAAd,UACE,6BACE,wBACEC,KAAK,SACLC,QAAS,kBAAMb,GAAcD,EAAO,GAAGW,aACvCI,SAAmB,IAATf,EAHZ,mBADM,MASPG,EAAMa,KAAI,SAAAC,GAAI,OACb,6BAGa,QAATA,EACE,+BAAOA,IAEP,wBACEJ,KAAK,SACLC,QAAS,kBAAMb,EAAagB,IAC5BL,UAAWM,IAAW,CAAEC,OAAQF,IAASjB,EAAKW,aAC9CI,SAAUE,IAASjB,EAAKW,WAJ1B,SAMGM,KAXFX,KAAKc,aAgBd,6BACE,wBACEP,KAAK,SACLC,QAAS,kBAAMb,GAAcD,EAAO,GAAGW,aACvCI,SAAUf,IAASM,KAAKC,KAAKT,EAAQC,GAHvC,mBADM,UCRCsB,G,MA9DO,WACpB,MAA0BnB,mBAAiB,IAA3C,mBAAOJ,EAAP,KAAcwB,EAAd,KACA,EAA8BpB,mBAAiB,GAA/C,mBAAOH,EAAP,KAAgBwB,EAAhB,KACA,EAAwBrB,mBAAiB,GAAzC,mBAAOF,EAAP,KAAawB,EAAb,KAQA,OACE,qCACE,4CACA,wBAAOC,QAAQ,QAAf,mBAEE,uBACEC,GAAG,QACHb,KAAK,SACLc,MAAO7B,EACP8B,IAAK,EACLC,SAAU,SAACC,GAAD,OAAWR,GAAUQ,EAAMC,OAAOJ,aAGhD,uBACA,wBAAOF,QAAQ,UAAf,qBAEE,uBACEC,GAAG,UACHb,KAAK,SACLc,MAAO5B,EACP6B,IAAK,EACLI,IAAKlC,EACL+B,SAAU,SAACC,GACTP,GAAYO,EAAMC,OAAOJ,OACzBH,EAAQ,SAId,uBACA,wBAAOC,QAAQ,OAAf,mBAEE,uBACEC,GAAG,OACHb,KAAK,SACLc,MAAO3B,EACP4B,IAAK,EACLI,IAAK1B,KAAKC,KAAKT,EAAQC,GACvB8B,SAAU,SAACC,GAAD,OAAWN,GAASM,EAAMC,OAAOJ,aAG/C,cAAC,EAAD,CACE7B,MAAOA,EACPC,QAASA,EACTC,KAAMA,EACNC,aAlDe,SAACgC,IACfA,IAAYjC,GACfwB,GAASS,WCRfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.123edfd4.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable no-plusplus */\nimport React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  page: number,\n  onChangePage: (item: string) => void,\n};\n\nexport const Pagination:React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  onChangePage,\n}) => {\n  const [items, setItems] = useState<string[]>(['1']);\n  const count = Math.ceil(total / perPage);\n\n  useEffect(() => {\n    setItems(['1']);\n\n    if ((page - 1) > 2) {\n      setItems((current: string[]) => [...current, '...']);\n    }\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 2; i <= count; i++) {\n      if (i >= (page - 1) && i <= (page + 1)) {\n        setItems((current: string[]) => [...current, i.toString()]);\n      }\n    }\n\n    if ((page + 2) < count) {\n      setItems((current: string[]) => [...current, '...']);\n    }\n\n    if (count > (page + 1)) {\n      setItems((current: string[]) => [...current, count.toString()]);\n    }\n  }, [total, perPage, page]);\n\n  return (\n    <ul className=\"pagination\">\n      <li key=\"-1\">\n        <button\n          type=\"button\"\n          onClick={() => onChangePage((page - 1).toString())}\n          disabled={page === 1}\n        >\n          Prev\n        </button>\n      </li>\n      {items.map(item => (\n        <li\n          key={Math.random()}\n        >\n          {(item === '...')\n            ? <span>{item}</span>\n            : (\n              <button\n                type=\"button\"\n                onClick={() => onChangePage(item)}\n                className={classnames({ active: item === page.toString() })}\n                disabled={item === page.toString()}\n              >\n                {item}\n              </button>\n            )}\n        </li>\n      ))}\n      <li key=\"+1\">\n        <button\n          type=\"button\"\n          onClick={() => onChangePage((page + 1).toString())}\n          disabled={page === Math.ceil(total / perPage)}\n        >\n          Next\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { Pagination } from './components/Pagination/Pagination';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [total, setTotal] = useState<number>(42);\n  const [perPage, setPerPage] = useState<number>(5);\n  const [page, setPage] = useState<number>(1);\n\n  const onChangePage = (newPage: string) => {\n    if (+newPage !== page) {\n      setPage(+newPage);\n    }\n  };\n\n  return (\n    <>\n      <h1>Pagination</h1>\n      <label htmlFor=\"total\">\n        Total:\n        <input\n          id=\"total\"\n          type=\"number\"\n          value={total}\n          min={1}\n          onChange={(event) => setTotal(+event.target.value)}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"perPage\">\n        PerPage:\n        <input\n          id=\"perPage\"\n          type=\"number\"\n          value={perPage}\n          min={1}\n          max={total}\n          onChange={(event) => {\n            setPerPage(+event.target.value);\n            setPage(1);\n          }}\n        />\n      </label>\n      <br />\n      <label htmlFor=\"page\">\n        Total:\n        <input\n          id=\"page\"\n          type=\"number\"\n          value={page}\n          min={1}\n          max={Math.ceil(total / perPage)}\n          onChange={(event) => setPage(+event.target.value)}\n        />\n      </label>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        page={page}\n        onChangePage={onChangePage}\n      />\n    </>\n\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}